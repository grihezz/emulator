; Вычисление факториала числа 5
; Демонстрирует работу циклов и умножения

START:
    LOAD #5          ; Загружаем число для факториала
    STORE 100        ; Сохраняем в переменную n
    LOAD #1          ; Загружаем 1 (начальный результат)
    STORE 101        ; Сохраняем в переменную result

LOOP:
    LOAD 100         ; Загружаем n
    CMP #0           ; Сравниваем с 0
    JZ END           ; Если n = 0, завершаем
    
    ; Умножение result = result * n
    LOAD 101         ; Загружаем result
    STORE 102        ; Временно сохраняем
    LOAD 100         ; Загружаем n (множитель)
    STORE 103        ; Сохраняем счетчик для умножения
    
    LOAD #0          ; Обнуляем result
    STORE 101
    
MULTIPLY:
    LOAD 103         ; Загружаем счетчик
    CMP #0           ; Сравниваем с 0
    JZ NEXT          ; Если 0, переходим к следующему
    
    LOAD 101         ; Загружаем result
    ADD 102          ; Добавляем временное значение
    STORE 101        ; Сохраняем result
    
    LOAD 103         ; Загружаем счетчик
    SUB #1           ; Уменьшаем на 1
    STORE 103        ; Сохраняем счетчик
    JMP MULTIPLY     ; Повторяем умножение
    
NEXT:
    LOAD 100         ; Загружаем n
    SUB #1           ; Уменьшаем на 1
    STORE 100        ; Сохраняем n
    JMP LOOP         ; Переходим к началу цикла

END:
    HALT             ; Результат в переменной 101

; Ожидаемый результат:
; Memory[101] = 120 (факториал 5 = 5! = 5*4*3*2*1 = 120)
; Memory[100] = 0   (n после завершения)

; Промежуточные переменные:
; Memory[100] = n (текущее число)
; Memory[101] = result (накопленный результат)
; Memory[102] = temp (временное значение для умножения)
; Memory[103] = counter (счетчик для умножения)
