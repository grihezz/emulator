; Программа поиска максимума в массиве
; Вариант №9 - Одноадресная архитектура Фон-Неймана
; Массив: [5, 3, 8, 1, 9, 2, 7]
; Результат: 9 (максимальный элемент)

; Инициализация переменных
START:
    LOAD #0          ; Загружаем 0 в аккумулятор (текущий максимум)
    STORE 100        ; Сохраняем в переменную max
    LOAD #0          ; Загружаем 0 (индекс)
    STORE 101        ; Сохраняем в переменную i
    LOAD #7          ; Загружаем размер массива
    STORE 102        ; Сохраняем в переменную size

; Основной цикл поиска
LOOP:
    LOAD 101         ; Загружаем i
    CMP 102          ; Сравниваем с size
    JZ END           ; Если i == size, переходим к END
    
    ; Вычисляем адрес элемента массива
    LOAD 101         ; Загружаем i
    ADD #200         ; Добавляем адрес начала массива
    STORE 103        ; Сохраняем адрес элемента в temp
    
    ; Загружаем элемент массива
    LOAD (103)       ; Загружаем элемент массива по косвенной адресации
    CMP 100          ; Сравниваем с текущим максимумом
    JZ NEXT          ; Если меньше или равно, переходим к NEXT
    
    ; Обновляем максимум
    STORE 100        ; Сохраняем новый максимум
    LOAD 101         ; Загружаем текущий индекс
    STORE 104        ; Сохраняем индекс максимума

; Переход к следующему элементу
NEXT:
    LOAD 101         ; Загружаем i
    ADD #1           ; Увеличиваем на 1
    STORE 101        ; Сохраняем обратно
    JMP LOOP         ; Переходим к началу цикла

; Завершение программы
END:
    HALT

; Данные (загружаются в память начиная с адреса 200):
; 200: 7    - размер массива
; 201: 5    - первый элемент
; 202: 3    - второй элемент
; 203: 8    - третий элемент
; 204: 1    - четвертый элемент
; 205: 9    - пятый элемент (максимум)
; 206: 2    - шестой элемент
; 207: 7    - седьмой элемент

; Переменные:
; 100: max  - текущий максимум
; 101: i    - индекс текущего элемента
; 102: size - размер массива
; 103: temp - временная переменная для адреса
; 104: max_index - индекс максимального элемента
